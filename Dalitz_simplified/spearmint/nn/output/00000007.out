Job launching after 0.23 seconds in submission.
Running python job.
Changed into dir /Users/weisser/Dropbox (MIT)/MIT/Research/MLTools/Dalitz_simplified/spearmint/nn
Importing classifier_eval_wrapper.py
Using Theano backend.
/usr/local/lib/python2.7/site-packages/theano/tensor/signal/downsample.py:6: UserWarning: downsample module has been moved to the theano.tensor.signal.pool module.
  "downsample module has been moved to the theano.tensor.signal.pool module.")
Running classifier_eval_wrapper.main()
/usr/local/lib/python2.7/site-packages/keras/initializations.py:13: VisibleDeprecationWarning: converting an array with ndim > 0 to an index will result in an error in the future
  return K.variable(np.random.uniform(low=-scale, high=scale, size=shape),
/usr/local/lib/python2.7/site-packages/keras/backend/theano_backend.py:70: VisibleDeprecationWarning: converting an array with ndim > 0 to an index will result in an error in the future
  return variable(np.zeros(shape), dtype, name)

This script can be used to get the p value for classifiers. It takes input files with column vectors corresponding to features and lables. 
Then there are two different routes one can go down. When mode has a value of 1, then a grid search will be performed on 
one set of input files. If it is 2, then the hyperparemeter search is performed by spearmint. When the mode is turned off (0), 
then the p value is computed for multiple sets of input files and the p value distribution is plotted. One sets all the valiables 
including the classifier in the "args" list. The classifier provided is ignored if keras_mode is on (1) in which case a keras neural 
network is used.   

Anything printed here will end up in the output directory for job #7
{u'n_hidden_layers': array([5]), u'dimof_middle': array([200])}
[('/Users/weisser/MIT_Dropbox/MIT/Research/MLTools/Dalitz/dpmodel/data/data_optimisation.0.0.txt', '/Users/weisser/MIT_Dropbox/MIT/Research/MLTools/Dalitz/dpmodel/data/data_optimisation.200.1.txt')]
spearmint hyperparameter search mode
Operating of files :/Users/weisser/MIT_Dropbox/MIT/Research/MLTools/Dalitz/dpmodel/data/data_optimisation.0.0.txt   /Users/weisser/MIT_Dropbox/MIT/Research/MLTools/Dalitz/dpmodel/data/data_optimisation.200.1.txt
X :  [[ 0.375146   0.511686 ]
 [ 0.0574786  0.522151 ]
 [ 0.312339   0.134247 ]
 ..., 
 [ 0.104011   0.513612 ]
 [ 0.805868   0.126194 ]
 [ 0.166049   0.576839 ]]
y :  [ 0.  0.  1. ...,  0.  0.  0.]
Finished with setting up samples
dimof_input :  2 dimof_output :  1
Cross validation run  1
X_train :  [[ 0.26696177  0.8552211 ]
 [-1.21751141  0.91276704]
 [-0.02653799 -1.22027637]
 ..., 
 [-0.16112628 -1.02199171]
 [ 2.01779183 -0.99795604]
 [ 0.31680444  0.73006625]]
y_train :  [ 0.  0.  1. ...,  1.  0.  0.]
 128/4000 [..............................] - ETA: 0s 256/4000 [>.............................] - ETA: 0s 384/4000 [=>............................] - ETA: 0s 512/4000 [==>...........................] - ETA: 0s 640/4000 [===>..........................] - ETA: 0s 768/4000 [====>.........................] - ETA: 0s 896/4000 [=====>........................] - ETA: 0s1024/4000 [======>.......................] - ETA: 0s1152/4000 [=======>......................] - ETA: 0s1280/4000 [========>.....................] - ETA: 0s1408/4000 [=========>....................] - ETA: 0s1536/4000 [==========>...................] - ETA: 0s1664/4000 [===========>..................] - ETA: 0s1792/4000 [============>.................] - ETA: 0s1920/4000 [=============>................] - ETA: 0s2048/4000 [==============>...............] - ETA: 0s2176/4000 [===============>..............] - ETA: 0s2304/4000 [================>.............] - ETA: 0s2432/4000 [=================>............] - ETA: 0s2560/4000 [==================>...........] - ETA: 0s2688/4000 [===================>..........] - ETA: 0s2816/4000 [====================>.........] - ETA: 0s2944/4000 [=====================>........] - ETA: 0s3072/4000 [======================>.......] - ETA: 0s3200/4000 [=======================>......] - ETA: 0s3328/4000 [=======================>......] - ETA: 0s3456/4000 [========================>.....] - ETA: 0s3584/4000 [=========================>....] - ETA: 0s3712/4000 [==========================>...] - ETA: 0s3840/4000 [===========================>..] - ETA: 0s3968/4000 [============================>.] - ETA: 0s4000/4000 [==============================] - 0s     Got result 0.0602488999539
Completed successfully in 130.39 seconds. [{u'main': 0.060248899953888504}]

prob_pred :  [[ 0.47937346]
 [ 0.61986089]
 [ 0.59823078]
 ..., 
 [ 0.52736092]
 [ 0.4906607 ]
 [ 0.5618403 ]]
Plot
Ks_2sampResult(statistic=0.041687763713080139, pvalue=0.060248899953888504)
scores :  [0.060248899953888504]
